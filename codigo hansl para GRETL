# === Inicializar muestra simulada ===
nulldata 500
set seed 2025

# === Generar variables principales ===
series ingresos     = normal(2100, 600)
series consumo      = ingresos * (0.75 + normal(0, 0.05))
series deuda        = exp(normal(9.5, 0.4))
series nmiembros    = ceil(uniform(2, 6))
series edad_jefe    = uniform(25, 65)

# === Nivel educativo (0=primaria, 1=secundaria, 2=superior) ===
series u = uniform(0, 1)
series educacion = NA
loop i = 1..$nobs --quiet
    if u[i] < 0.3
        educacion[i] = 0
    elif u[i] < 0.7
        educacion[i] = 1
    else
        educacion[i] = 2
    endif
endloop

# === Formalidad laboral (1=formal, 0=informal) ===
series formalidad = (uniform(0, 1) < 0.45)

# === Ahorro y tasa de ahorro (%) ===
series ahorro       = ingresos - consumo
series tasa_ahorro  = 100 * (ahorro / ingresos)

# === Conteo por subgrupos ===
scalar n_formal   = sum(formalidad)
scalar n_informal = $nobs - n_formal

# === RegresiÃ³n clÃ¡sica ===
ols consumo const ingresos deuda nmiembros formalidad

# === RegresiÃ³n log-log para elasticidades ===
series log_con = log(consumo)
series log_ing = log(ingresos)
ols log_con const log_ing deuda nmiembros formalidad

# === RegresiÃ³n por subgrupos de formalidad ===
if n_formal > 30
    smpl formalidad == 1 --restrict
    ols consumo const ingresos
    smpl --full
endif

if n_informal > 30
    smpl formalidad == 0 --restrict
    ols consumo const ingresos
    smpl --full
endif

# === Tasa de ahorro promedio por nivel educativo ===
scalar promedio0 = mean(tasa_ahorro, educacion == 0)
scalar promedio1 = mean(tasa_ahorro, educacion == 1)
scalar promedio2 = mean(tasa_ahorro, educacion == 2)

printf "\nðŸŽ“ Tasa de ahorro promedio por nivel educativo:\n"
printf "Primaria   (0): %.2f%%\n", promedio0
printf "Secundaria (1): %.2f%%\n", promedio1
printf "Superior   (2): %.2f%%\n", promedio2
